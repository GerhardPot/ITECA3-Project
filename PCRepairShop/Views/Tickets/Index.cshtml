@using Microsoft.AspNetCore.Identity
@using System.Collections.Generic;

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@{
    var currentUser = await UserManager.GetUserAsync(User);
    string role = "";
    if (currentUser != null)
    {
        var roleList = await UserManager.GetRolesAsync(currentUser);
        role = roleList.First();
    }
}


@model IEnumerable<pcrepairshop.Models.Ticket>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

@if (role == "Users")
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.InitialStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DeviceDescription)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.InitialStatus)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DeviceDescription)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.User)
                </td>
                <td>

                    <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                    @if (role != "Users")
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
